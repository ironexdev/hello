version: "3.9"

services:
  php-fpm:
    environment:
      MYSQL_DATABASE_FILE: /run/secrets/mysql_database
      MYSQL_SERVER: "mysql"
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_USER_FILE: /run/secrets/mysql_user
    image: ironex/hello-php-fpm
    networks:
      - internal
    secrets:
      - mysql_database
      - mysql_password
      - mysql_user
    volumes:
      - var:/app/var
      - vendor:/app/vendor

  http-proxy:
    image: ironex/hello-http-proxy
    networks:
      - external
    ports:
      - 80:80
      - 443:443
    volumes:
      - certbot:/etc/letsencrypt

  api-server:
    build:
      context: .
      dockerfile: ./etc/api-server/Dockerfile
    container_name: hello_api-server
    depends_on:
      - php-fpm
    image: ironex/hello-api-server
    networks:
      - external
      - internal
    volumes:
      - var:/app/var

  mysql:
    environment:
      MYSQL_DATABASE: /run/secrets/mysql_database
      MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
      MYSQL_USER: /run/secrets/mysql_user
    image: ironex/hello-mysql
    networks:
      - internal
    secrets:
      - mysql_database
      - mysql_password
      - mysql_root_password
      - mysql_user
    volumes:
      - mysql:/var/lib/mysql

  adminer:
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    image: ironex/hello-adminer
    networks:
      - internal
    ports:
      - 8080:8080

networks:
  internal:
  external:

secrets:
  mysql_database:
    external: true
  mysql_password:
    external: true
  mysql_root_password:
    external: true
  mysql_user:
    external: true

# Volumes are prefixed with stack name (stack_volume) when using docker stack deploy <stack> command
volumes:
  certbot:
  mysql:
  var:
  vendor:
